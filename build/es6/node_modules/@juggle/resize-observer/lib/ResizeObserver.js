import{ResizeObserverController as e}from"./ResizeObserverController.js";import{isElement as r}from"./utils/element.js";var t=function(){function ResizeObserver(r){if(0===arguments.length)throw new TypeError("Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.");if("function"!=typeof r)throw new TypeError("Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.");e.connect(this,r)}return ResizeObserver.prototype.observe=function(t,o){if(0===arguments.length)throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.");if(!r(t))throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element");e.observe(this,t,o)},ResizeObserver.prototype.unobserve=function(t){if(0===arguments.length)throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.");if(!r(t))throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element");e.unobserve(this,t)},ResizeObserver.prototype.disconnect=function(){e.disconnect(this)},ResizeObserver.toString=function(){return"function ResizeObserver () { [polyfill code] }"},ResizeObserver}();export{t as ResizeObserver};